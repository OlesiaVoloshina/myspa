{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\bloomreach\\\\spa\\\\react-csr\\\\src\\\\components\\\\Menu.tsx\";\n\n/*\n * Copyright 2019-2020 Hippo B.V. (http://www.onehippo.com)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { TYPE_LINK_EXTERNAL, isMenu } from '@bloomreach/spa-sdk';\nimport { BrComponentContext, BrManageMenuButton, BrPageContext } from '@bloomreach/react-sdk';\n\nfunction MenuLink({\n  item\n}) {\n  var _item$getLink;\n\n  const url = item.getUrl();\n\n  if (!url) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-link text-capitalize disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, item.getName());\n  }\n\n  if (((_item$getLink = item.getLink()) === null || _item$getLink === void 0 ? void 0 : _item$getLink.type) === TYPE_LINK_EXTERNAL) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link text-capitalize\",\n      href: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, item.getName());\n  }\n\n  return /*#__PURE__*/React.createElement(Link, {\n    to: url,\n    className: \"nav-link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }\n  }, item.getName());\n}\n\nexport function Menu() {\n  var _component$getModels;\n\n  const component = React.useContext(BrComponentContext);\n  const page = React.useContext(BrPageContext);\n  const menuRef = component === null || component === void 0 ? void 0 : (_component$getModels = component.getModels()) === null || _component$getModels === void 0 ? void 0 : _component$getModels.menu;\n  const menu = menuRef && (page === null || page === void 0 ? void 0 : page.getContent(menuRef));\n\n  if (!isMenu(menu)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: `navbar-nav col-12 ${page.isPreview() ? 'has-edit-button' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BrManageMenuButton, {\n    menu: menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), menu.getItems().map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: `nav-item ${item.isSelected() ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuLink, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Projects/bloomreach/spa/react-csr/src/components/Menu.tsx"],"names":["React","Link","TYPE_LINK_EXTERNAL","isMenu","BrComponentContext","BrManageMenuButton","BrPageContext","MenuLink","item","url","getUrl","getName","getLink","type","Menu","component","useContext","page","menuRef","getModels","menu","getContent","isPreview","getItems","map","index","isSelected"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAmCC,kBAAnC,EAAuDC,MAAvD,QAAqE,qBAArE;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,aAAjD,QAAsE,uBAAtE;;AAMA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA2C;AAAA;;AACzC,QAAMC,GAAG,GAAGD,IAAI,CAACE,MAAL,EAAZ;;AAEA,MAAI,CAACD,GAAL,EAAU;AACR,wBAAO;AAAM,MAAA,SAAS,EAAC,mCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDD,IAAI,CAACG,OAAL,EAArD,CAAP;AACD;;AAED,MAAI,kBAAAH,IAAI,CAACI,OAAL,kEAAgBC,IAAhB,MAAyBX,kBAA7B,EAAiD;AAC/C,wBAAO;AAAG,MAAA,SAAS,EAAC,0BAAb;AAAwC,MAAA,IAAI,EAAEO,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDD,IAAI,CAACG,OAAL,EAApD,CAAP;AACD;;AAED,sBAAO,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEF,GAAV;AAAe,IAAA,SAAS,EAAC,0BAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDD,IAAI,CAACG,OAAL,EAArD,CAAP;AACD;;AAED,OAAO,SAASG,IAAT,GAAgB;AAAA;;AACrB,QAAMC,SAAS,GAAGf,KAAK,CAACgB,UAAN,CAAiBZ,kBAAjB,CAAlB;AACA,QAAMa,IAAI,GAAGjB,KAAK,CAACgB,UAAN,CAAiBV,aAAjB,CAAb;AACA,QAAMY,OAAO,GAAGH,SAAH,aAAGA,SAAH,+CAAGA,SAAS,CAAEI,SAAX,EAAH,yDAAG,qBAAoCC,IAApD;AACA,QAAMA,IAAI,GAAGF,OAAO,KAAID,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEI,UAAN,CAAyBH,OAAzB,CAAJ,CAApB;;AAEA,MAAI,CAACf,MAAM,CAACiB,IAAD,CAAX,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAG,qBAAoBH,IAAI,CAAEK,SAAN,KAAoB,iBAApB,GAAwC,EAAG,EAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAEF,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEIA,IAAI,CAACG,QAAL,GAAgBC,GAAhB,CAAoB,CAAChB,IAAD,EAAOiB,KAAP,kBACpB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAgB,IAAA,SAAS,EAAG,YAAWjB,IAAI,CAACkB,UAAL,KAAoB,QAApB,GAA+B,EAAG,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAElB,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CAFJ,CADF;AAUD","sourcesContent":["/*\n * Copyright 2019-2020 Hippo B.V. (http://www.onehippo.com)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { MenuItem, Menu as BrMenu, TYPE_LINK_EXTERNAL, isMenu } from '@bloomreach/spa-sdk';\nimport { BrComponentContext, BrManageMenuButton, BrPageContext } from '@bloomreach/react-sdk';\n\ninterface MenuLinkProps {\n  item: MenuItem;\n}\n\nfunction MenuLink({ item }: MenuLinkProps) {\n  const url = item.getUrl();\n\n  if (!url) {\n    return <span className=\"nav-link text-capitalize disabled\">{item.getName()}</span>;\n  }\n\n  if (item.getLink()?.type === TYPE_LINK_EXTERNAL) {\n    return <a className=\"nav-link text-capitalize\" href={url}>{item.getName()}</a>;\n  }\n\n  return <Link to={url} className=\"nav-link text-capitalize\">{item.getName()}</Link>;\n}\n\nexport function Menu() {\n  const component = React.useContext(BrComponentContext);\n  const page = React.useContext(BrPageContext);\n  const menuRef = component?.getModels<MenuModels>()?.menu;\n  const menu = menuRef && page?.getContent<BrMenu>(menuRef);\n\n  if (!isMenu(menu)) {\n    return null;\n  }\n\n  return (\n    <ul className={`navbar-nav col-12 ${page!.isPreview() ? 'has-edit-button' : ''}`}>\n      <BrManageMenuButton menu={menu} />\n      { menu.getItems().map((item, index) => (\n        <li key={index} className={`nav-item ${item.isSelected() ? 'active' : ''}`}>\n          <MenuLink item={item} />\n        </li>\n      )) }\n    </ul>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}